const express = require("express");
const Role = require("../models/Role");

const router = express.Router();

// üîπ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ—ó —Ä–æ–ª—ñ
router.post("/create", async (req, res) => {
    try {
        const { name } = req.body;
        if (!name) return res.status(400).json({ message: "–ù–∞–∑–≤–∞ —Ä–æ–ª—ñ –æ–±–æ–≤'—è–∑–∫–æ–≤–∞" });

        const existingRole = await Role.findOne({ name });
        if (existingRole) return res.status(400).json({ message: "–¢–∞–∫–∞ —Ä–æ–ª—å –≤–∂–µ —ñ—Å–Ω—É—î" });

        const role = new Role({ name });
        await role.save();
        res.status(201).json(role);
    } catch (error) {
        res.status(500).json({ error: error.message });
    }
});

// üîπ –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –≤—Å—ñ—Ö —Ä–æ–ª–µ–π
router.get("/", async (req, res) => {
    try {
        const roles = await Role.find();
        res.json(roles);
    } catch (error) {
        res.status(500).json({ error: error.message });
    }
});

// üîπ –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–æ–ª—ñ –∑–∞ ID
router.get("/:id", async (req, res) => {
    try {
        const role = await Role.findById(req.params.id);
        if (!role) return res.status(404).json({ message: "–†–æ–ª—å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞" });
        res.json(role);
    } catch (error) {
        res.status(500).json({ error: error.message });
    }
});

// üîπ –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Ä–æ–ª—ñ
router.put("/:id", async (req, res) => {
    try {
        const { name } = req.body;
        if (!name) return res.status(400).json({ message: "–ù–∞–∑–≤–∞ —Ä–æ–ª—ñ –æ–±–æ–≤'—è–∑–∫–æ–≤–∞" });

        const updatedRole = await Role.findByIdAndUpdate(req.params.id, { name }, { new: true });
        if (!updatedRole) return res.status(404).json({ message: "–†–æ–ª—å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞" });

        res.json(updatedRole);
    } catch (error) {
        res.status(500).json({ error: error.message });
    }
});

// üîπ –í–∏–¥–∞–ª–µ–Ω–Ω—è —Ä–æ–ª—ñ
router.delete("/:id", async (req, res) => {
    try {
        const deletedRole = await Role.findByIdAndDelete(req.params.id);
        if (!deletedRole) return res.status(404).json({ message: "–†–æ–ª—å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞" });

        res.json({ message: "–†–æ–ª—å —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–∞", deletedRole });
    } catch (error) {
        res.status(500).json({ error: error.message });
    }
});

module.exports = router;
